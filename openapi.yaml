openapi: 3.0.0
servers:
  - description: ServidorLocal
    url: 'http://localhost:3000'
info:
  version: 1.0.0
  title: ONG_ALKEMY
  description:  API ONG para la aceleracion en Nodejs de Alkemy
tags:
 
  - name: Categorias
    description: CRUD Categorias
 
paths:

  /categories:
    get:
      tags:
        - Categorias
      summary: Obtener lista de categorias (solo Admin)
      description: Lista todas las categorias (Solo Admin)
    
    
      responses:
        200:
          description: Operacion Exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categorias"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/ForBidden"
        500:
          $ref: "#/components/responses/ServerError"
    post:
      tags:
        - Categorias
      summary: Agregar categorias (solo Admin)
      description: Agregar categoria a la base de datos
      security:
         - bearerAuth: [] 
      requestBody:
        description: Crear objeto de la categoria
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BodyCategoriesPost"
        required: true
      responses:
        200:
          description: Categoria agregada con exito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/ForBidden"  
        500:
          $ref: "#/components/responses/ServerError"
  /categories/{id}:
    get:
      tags:
        - Categorias
      summary: Obtener categoria por ID (solo Admin)
      description: Retorna la categoria indicada por parametro id
      parameters:
        - name: id
          in: path
          description: ID de la categoria
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Operacion Exitosa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
    
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/ForBidden"  
        404:
           $ref: "#/components/responses/NotFound"
        500: 
           $ref: "#/components/responses/ServerError"
    put:
      tags:
        - Categorias
      summary: Editar Categorias (solo Admin)
      description: Edita categorias por ID
      security:
        - bearerAuth: [] 
      parameters:
        - name: id
          in: path
          description: ID de la categoria a modificar
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos a modificar
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
        required: true
      responses:
        200:
         description: Operacion Exitosa
         content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
                  
        
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/ForBidden"  
        404:
           $ref: "#/components/responses/NotFound"
        500: 
           $ref: "#/components/responses/ServerError"
    delete:
      tags:
        - Categorias
      summary: Eliminar categoria (solo Admin)
      description: Elimina una categoria por Id
      security:
         - bearerAuth: [] 
      parameters:
        - name: id
          in: path
          description: Id de la categoria a  eliminar.
          required: true
          schema:
            type: integer
      responses:
       200:
         description: Categoria eliminada con exito
         content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
       
       401:
         $ref: '#/components/responses/Unauthorized'
       403:
          $ref: "#/components/responses/ForBidden" 
       404:
         $ref: '#/components/responses/NotFound'
       500: 
         $ref: '#/components/responses/ServerError'

components:
  responses:
     Unauthorized:
        description: (Unauthorized) no hay autorizacion para crear categoria
     ForBidden:
        description: (Forbidden) no tienes los permisos necesarios 
     NotFound:
        description: (Not Found) no se encontro la informacion
     ServerError:
        description: Error en el servidor
  schemas:
    
    Categoria:
      type: object
      properties:
        name:
          type: string
          example: Tecnologia
        description:
          type: string
          example: Musk compra Twitter
        image:
          type: string
          example: "tecnologia.png"
     
    BodyCategoriesPost:
       type: object
       properties:
          name:
           type: string
           description: nombre de la categoria
          description:
            type: string
            description: descripcion de la categoria.
          image:
             type: string
             description: imagen que identifique la categoria      
       required:
        - name
    Categorias:
        type: array
        items:
          $ref: "#/components/schemas/Categoria"
      
    Token:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      
  securitySchemes:
     token:
      type: http
      scheme: bearer
      bearerFormat: JWT
     bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
      
security:
  - bearerAuth: []         