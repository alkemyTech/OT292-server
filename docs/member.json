{
  "openapi": "3.0.0",
  "info": {
    "title": "Alkemy 292",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Members",
      "description": "Allow us to access to member data."
    },
    {
      "name": "Categorias"
    }
  ],
  "paths": {
    "/members/": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Create a member",
        "description": "Allow us to create a member and save it in the system.",
        "security": [
          {
            "bearerTokenJWT": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/postMember"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/returnedMemberCreated"
          },
          "400": {
            "$ref": "#/components/responses/validationBodyException"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedException"
          }
        }
      },
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Returns a list of members",
        "description": "Allow us get info of members.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "security": [
          {
            "bearerTokenJWT": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/returnedMembersPages"
          },
          "400": {
            "$ref": "#/components/responses/validationQueryException"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedException"
          },
          "403": {
            "$ref": "#/components/responses/unauthorizatedException"
          }
        }
      }
    },
    "/members/{memberId}": {
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Update a member",
        "description": "Allow us to update a member and save it in the system.",
        "security": [
          {
            "bearerTokenJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/memberId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/postMember"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/returnedMemberUpdated"
          },
          "400": {
            "$ref": "#/components/responses/validationBodyException"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedException"
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Delete a member",
        "description": "Allow us to delete a member in the system.",
        "security": [
          {
            "bearerTokenJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/memberId"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/deletedSuccesfully"
          },
          "401": {
            "$ref": "#/components/responses/unauthenticatedException"
          },
          "403": {
            "$ref": "#/components/responses/unauthorizatedException"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerTokenJWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "memberId": {
        "name": "memberId",
        "in": "path",
        "description": "ID of the member to update",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Set a limit for pagination",
        "required": false,
        "allowEmptyValue": false,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Set a offset for pagination",
        "required": false,
        "allowEmptyValue": false,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Set the number page wanted",
        "required": false,
        "allowEmptyValue": false,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "responses": {
      "returnedMemberCreated": {
        "description": "Succesfull member created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Federico"
                    },
                    "facebookUrl": {
                      "type": "string",
                      "example": "https://www.facebook.com/route"
                    },
                    "instagramUrl": {
                      "type": "string",
                      "example": "https://www.instagram.com/route"
                    },
                    "linkedinUrl": {
                      "type": "string",
                      "example": "https://www.linkedin.com/route"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://www.imageBank.com/img"
                    },
                    "description": {
                      "type": "string",
                      "example": "some description"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2022-10-19T17:03:58.666Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-10-19T17:03:58.666Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "returnedMemberUpdated": {
        "description": "Succesfull member created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Federico"
                    },
                    "facebookUrl": {
                      "type": "string",
                      "example": "https://www.facebook.com/route"
                    },
                    "instagramUrl": {
                      "type": "string",
                      "example": "https://www.instagram.com/route"
                    },
                    "linkedinUrl": {
                      "type": "string",
                      "example": "https://www.linkedin.com/route"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://www.imageBank.com/img"
                    },
                    "description": {
                      "type": "string",
                      "example": "some description"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2022-10-19T17:03:58.666Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-10-19T17:03:58.666Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "returnedMembersPages": {
        "description": "Returns a list of members and url actual page, next ,lastpage and count.",
        "content": {
          "aplication/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "string",
                          "example": "http://host:port/members?page=1&offset=10&limit=10"
                        },
                        "next": {
                          "type": "string",
                          "example": "http://host:port/members?page=2&offset=10&limit=10"
                        },
                        "lastpage": {
                          "type": "string",
                          "example": "http://host:port/members?page=2&offset=10&limit=10"
                        },
                        "count": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Federico"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "validationQueryException": {
        "description": "Validation query exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Input validation error"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": [
                      "query[limit]: limit must be integuer",
                      "query[offset]: offset must be integuer",
                      "query[page]: page must be integuer"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "validationBodyException": {
        "description": "Validation body exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Input validation error"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": [
                      "body[name]: Name cannot be empty",
                      "body[facebookUrl]: Facebook url cannot be empty",
                      "body[instagramUrl]: Instagram url cannot be empty",
                      "body[linkedinUrl]: Linkedin url cannot be empty",
                      "body[image]: Image must be string",
                      "body[description]: Description must be string"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "unauthenticatedException": {
        "description": "Unauthenticated - Need to be logged in",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "unauthorizatedException": {
        "description": "Unauthorizated - Need more permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          }
        }
      },
      "deletedSuccesfully": {
        "description": "Deleted succesfully - Return a empty object.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {}
            }
          }
        }
      }
    },
    "requestBodies": {
      "postMember": {
        "description": "Include all  or partial info needed to create a member",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      },
      "putMember": {
        "description": "include all  or partial info needed to update a member",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Member"
            }
          }
        }
      }
    },
    "schemas": {
      "Member": {
        "type": "object",
        "required": [
          "name",
          "image"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "Juan"
          },
          "facebookUrl": {
            "type": "string",
            "description": "Ruta de perfil de facebook",
            "example": "https://www.facebook.com/juan"
          },
          "instagramUrl": {
            "type": "string",
            "description": "Ruta de perfil de instagram",
            "example": "https://www.instagram.com/juan"
          },
          "linkedinUrl": {
            "type": "string",
            "description": "Ruta de perfil de linkedin",
            "example": "https://www.linkedin.com/juan"
          },
          "image": {
            "type": "string",
            "description": "Ruta de imagen",
            "example": "https://www.imgBank.com/juanImage"
          },
          "description": {
            "description": "Descripcion de usuario",
            "type": "string",
            "example": "Qui ut voluptate velit sint."
          }
        }
      }
    }
  }
}